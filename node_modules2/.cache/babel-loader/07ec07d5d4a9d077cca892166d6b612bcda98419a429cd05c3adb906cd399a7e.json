{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\personal\\\\xtract-test\\\\src\\\\StaticForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Grid, Paper, TextField, Typography, MenuItem, InputAdornment } from \"@mui/material\";\nimport { setDeep } from \"./utils\";\nimport config from \"./configurationToImplement.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// helper to safely access nested fields\nconst getValueFromPath = (obj, path) => {\n  return path.split(\".\").reduce((acc, key) => {\n    if (typeof acc === \"object\" && acc !== null && key in acc) {\n      return acc[key];\n    }\n    return undefined;\n  }, obj);\n};\nconst StaticForm = _ref => {\n  _s();\n  let {\n    object\n  } = _ref;\n  const [myObject, setMyObject] = useState(object);\n  const [savedObject, setSavedObject] = useState();\n  const handleChange = function (path) {\n    let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : val => val;\n    return event => {\n      const value = transform(event.target.value);\n      setMyObject(setDeep(myObject, path, value));\n    };\n  };\n  const renderField = field => {\n    var _ref2;\n    const {\n      type,\n      label,\n      path,\n      defaultValue\n    } = field;\n    const valueFromData = getValueFromPath(myObject, path);\n    const value = (_ref2 = valueFromData !== null && valueFromData !== void 0 ? valueFromData : defaultValue) !== null && _ref2 !== void 0 ? _ref2 : \"\";\n    switch (type) {\n      case \"textInput\":\n        {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: label,\n              value: value,\n              onChange: handleChange(path)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this)\n          }, path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this);\n        }\n      case \"integerInput\":\n        {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: label,\n              type: \"number\",\n              inputProps: {\n                min: field.min,\n                max: field.max\n              },\n              value: value,\n              onChange: handleChange(path, v => parseInt(v, 10))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this)\n          }, path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this);\n        }\n      case \"enumInput\":\n        {\n          var _field$values;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              select: true,\n              label: label,\n              value: value,\n              onChange: handleChange(path),\n              children: (_field$values = field.values) === null || _field$values === void 0 ? void 0 : _field$values.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this)\n          }, path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this);\n        }\n      case \"currencyInput\":\n        {\n          var _getValueFromPath, _ref3, _getValueFromPath2, _field$currencies, _field$currencies2;\n          const currencyPath = `${path}.currency`;\n          const valuePath = `${path}.value`;\n          const currValue = (_getValueFromPath = getValueFromPath(myObject, valuePath)) !== null && _getValueFromPath !== void 0 ? _getValueFromPath : \"\";\n          const currCurrency = (_ref3 = (_getValueFromPath2 = getValueFromPath(myObject, currencyPath)) !== null && _getValueFromPath2 !== void 0 ? _getValueFromPath2 : (_field$currencies = field.currencies) === null || _field$currencies === void 0 ? void 0 : _field$currencies[0]) !== null && _ref3 !== void 0 ? _ref3 : \"\";\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  select: true,\n                  fullWidth: true,\n                  label: \"Currency\",\n                  value: currCurrency,\n                  onChange: handleChange(currencyPath),\n                  children: (_field$currencies2 = field.currencies) === null || _field$currencies2 === void 0 ? void 0 : _field$currencies2.map(curr => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: curr,\n                    children: curr\n                  }, curr, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 21\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  type: \"number\",\n                  label: label,\n                  inputProps: {\n                    min: field.min,\n                    max: field.max\n                  },\n                  value: currValue,\n                  onChange: handleChange(valuePath, v => parseFloat(v)),\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: currCurrency\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 23\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this)\n          }, path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this);\n        }\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          padding: \"20px\",\n          margin: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Dynamic Vehicle Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          paddingTop: 2,\n          children: config.map(field => renderField(field))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => setSavedObject(myObject),\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          padding: \"20px\",\n          margin: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Updated Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(savedObject, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(StaticForm, \"lQHldY4JHB0y036v3ytkOT1MJqM=\");\n_c = StaticForm;\nexport default StaticForm;\nvar _c;\n$RefreshReg$(_c, \"StaticForm\");","map":{"version":3,"names":["React","useState","Button","Grid","Paper","TextField","Typography","MenuItem","InputAdornment","setDeep","config","jsxDEV","_jsxDEV","getValueFromPath","obj","path","split","reduce","acc","key","undefined","StaticForm","_ref","_s","object","myObject","setMyObject","savedObject","setSavedObject","handleChange","transform","arguments","length","val","event","value","target","renderField","field","_ref2","type","label","defaultValue","valueFromData","item","xs","children","fullWidth","onChange","fileName","_jsxFileName","lineNumber","columnNumber","inputProps","min","max","v","parseInt","_field$values","select","values","map","option","_getValueFromPath","_ref3","_getValueFromPath2","_field$currencies","_field$currencies2","currencyPath","valuePath","currValue","currCurrency","currencies","container","spacing","curr","parseFloat","InputProps","startAdornment","position","style","padding","margin","variant","paddingTop","marginTop","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/Projects/personal/xtract-test/src/StaticForm.tsx"],"sourcesContent":["import React, { useState, JSX } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  MenuItem,\r\n  InputAdornment\r\n} from \"@mui/material\";\r\nimport { MyObject } from \"./types\";\r\nimport { setDeep } from \"./utils\";\r\nimport config from \"./configurationToImplement.json\";\r\n\r\ntype StaticFormProps = {\r\n  object: MyObject;\r\n};\r\n\r\ntype FieldConfig = {\r\n  type: \"textInput\" | \"integerInput\" | \"enumInput\" | \"currencyInput\";\r\n  label: string;\r\n  path: string;\r\n  defaultValue?: string | number;\r\n  min?: number;\r\n  max?: number;\r\n  values?: string[];\r\n  currencies?: string[];\r\n};\r\n\r\n// helper to safely access nested fields\r\nconst getValueFromPath = (obj: MyObject, path: string): string | number | undefined => {\r\n  return path.split(\".\").reduce((acc: unknown, key: string) => {\r\n    if (typeof acc === \"object\" && acc !== null && key in acc) {\r\n      return (acc as Record<string, unknown>)[key];\r\n    }\r\n    return undefined;\r\n  }, obj) as string | number | undefined;\r\n};\r\n\r\nconst StaticForm = ({ object }: StaticFormProps): JSX.Element => {\r\n  const [myObject, setMyObject] = useState<MyObject>(object);\r\n  const [savedObject, setSavedObject] = useState<MyObject>();\r\n\r\n  const handleChange =\r\n    (\r\n      path: string,\r\n      transform: (val: string) => string | number = (val) => val\r\n    ) =>\r\n    (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n      const value = transform(event.target.value);\r\n      setMyObject(setDeep(myObject, path, value));\r\n    };\r\n\r\n  const renderField = (field: FieldConfig): JSX.Element | null => {\r\n    const { type, label, path, defaultValue } = field;\r\n    const valueFromData = getValueFromPath(myObject, path);\r\n    const value = valueFromData ?? defaultValue ?? \"\";\r\n\r\n    switch (type) {\r\n      case \"textInput\": {\r\n        return (\r\n          <Grid item xs={12} key={path}>\r\n            <TextField\r\n              fullWidth\r\n              label={label}\r\n              value={value}\r\n              onChange={handleChange(path)}\r\n            />\r\n          </Grid>\r\n        );\r\n      }\r\n\r\n      case \"integerInput\": {\r\n        return (\r\n          <Grid item xs={12} key={path}>\r\n            <TextField\r\n              fullWidth\r\n              label={label}\r\n              type=\"number\"\r\n              inputProps={{ min: field.min, max: field.max }}\r\n              value={value}\r\n              onChange={handleChange(path, (v) => parseInt(v, 10))}\r\n            />\r\n          </Grid>\r\n        );\r\n      }\r\n\r\n      case \"enumInput\": {\r\n        return (\r\n          <Grid item xs={12} key={path}>\r\n            <TextField\r\n              fullWidth\r\n              select\r\n              label={label}\r\n              value={value}\r\n              onChange={handleChange(path)}\r\n            >\r\n              {field.values?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n        );\r\n      }\r\n\r\n      case \"currencyInput\": {\r\n        const currencyPath = `${path}.currency`;\r\n        const valuePath = `${path}.value`;\r\n        const currValue = getValueFromPath(myObject, valuePath) ?? \"\";\r\n        const currCurrency =\r\n          getValueFromPath(myObject, currencyPath) ?? field.currencies?.[0] ?? \"\";\r\n\r\n        return (\r\n          <Grid item xs={12} key={path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  select\r\n                  fullWidth\r\n                  label=\"Currency\"\r\n                  value={currCurrency}\r\n                  onChange={handleChange(currencyPath)}\r\n                >\r\n                  {field.currencies?.map((curr) => (\r\n                    <MenuItem key={curr} value={curr}>\r\n                      {curr}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label={label}\r\n                  inputProps={{ min: field.min, max: field.max }}\r\n                  value={currValue}\r\n                  onChange={handleChange(valuePath, (v) => parseFloat(v))}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        {currCurrency}\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      }\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Paper style={{ padding: \"20px\", margin: \"10px\" }}>\r\n          <Typography variant=\"h4\">Dynamic Vehicle Form</Typography>\r\n          <Grid container spacing={2} paddingTop={2}>\r\n            {config.map((field: unknown) =>\r\n              renderField(field as FieldConfig)\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <Button variant=\"contained\" onClick={() => setSavedObject(myObject)}>\r\n                Save Changes\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Paper style={{ padding: \"20px\", margin: \"10px\" }}>\r\n          <Typography variant=\"h5\">Updated Output</Typography>\r\n          <pre>{JSON.stringify(savedObject, null, 2)}</pre>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StaticForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}